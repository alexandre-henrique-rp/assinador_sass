// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Client {
  id                 String        @id @default(uuid())
  name               String
  cpf                String        @unique
  birthDate          DateTime
  email              String        @unique
  username           String        @unique
  password           String
  hasCertificate     Boolean       @default(false)
  isCertificateValid Boolean       @default(false)
  isActive           Boolean       @default(true)
  documentPhotoUrl   String?
  facialPhotoUrl     String?
  certificates       Certificate[]
  documents          Document[]    @relation("ClientDocuments")
  uploadedDocuments  Document[]    @relation("UploadedDocuments") // Nome mais descritivo
  signatures         Signature[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
}

model Certificate {
  id             String   @id @default(uuid())
  subject        String
  serialNumber   String
  publicKey      String
  privateKey     String
  issuedAt       DateTime
  validUntil     DateTime
  isValid        Boolean  @default(true)
  issuer         String
  certificatePem String
  client         Client?   @relation(fields: [clientId], references: [id])
  clientId       String?   // Agora obrigatório
  isCA           Boolean  @default(false)
  isDownloaded   Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([subject, serialNumber])
}

model Document {
  id            String      @id @default(uuid())
  originalName  String
  size          Int
  documentType  String
  extension     String
  hash          String
  storagePath   String
  downloadUrl   String
  viewUrl       String
  isSigned      Boolean     @default(false)
  client        Client      @relation("ClientDocuments", fields: [clientId], references: [id])
  clientId      String
  signatures    Signature[]
  uploader      Client?     @relation("UploadedDocuments", fields: [uploaderId], references: [id]) // Agora mais claro
  uploaderId    String?
  atualName     String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([clientId, hash])
}

model Signature {
  id            String   @id @default(uuid())
  signer        Client   @relation(fields: [signerId], references: [cpf])
  signerId      String
  signedAt      DateTime @default(now())
  type          String   @default("Avançada")
  certificateId String?
  document      Document @relation(fields: [documentId], references: [id])
  documentId    String
  signatureData String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([signerId, documentId])
}
